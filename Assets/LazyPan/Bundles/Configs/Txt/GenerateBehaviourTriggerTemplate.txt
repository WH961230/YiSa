using UnityEngine;
#命名空间#

namespace LazyPan {
    public class Behaviour_Trigger_#行为标识# : Behaviour {
        public Behaviour_Trigger_#行为标识#(Entity entity, string behaviourSign) : base(entity, behaviourSign) {
            Cond.Instance.Get<Comp>(entity, Label.TRIGGER).OnTriggerEnterEvent.AddListener(TriggerEnterEvent);
            Cond.Instance.Get<Comp>(entity, Label.TRIGGER).OnTriggerExitEvent.AddListener(TriggerExitEvent);
        }

        private void TriggerEnterEvent(Collider collider) {
            ConsoleEx.Instance.Content("log", "触发#行为标识#!");
            /*
            if (Data.Instance.TryGetEntityByBodyPrefabID(collider.gameObject.GetInstanceID(), out Entity playerEntity)) {
                if (playerEntity.EntityData.BaseRuntimeData.Type == "Player") {
                    
                }
            }
            */
        }

        private void TriggerExitEvent(Collider collider) {
            ConsoleEx.Instance.Content("log", "离开#行为标识#!");
            /*
            if (Data.Instance.TryGetEntityByBodyPrefabID(collider.gameObject.GetInstanceID(), out Entity playerEntity)) {
                if (playerEntity.EntityData.BaseRuntimeData.Type == "Player") {
                    
                }
            }
            */
        }

        public override void Clear() {
            base.Clear();
            Cond.Instance.Get<Comp>(entity, Label.TRIGGER).OnTriggerEnterEvent.RemoveListener(TriggerEnterEvent);
            Cond.Instance.Get<Comp>(entity, Label.TRIGGER).OnTriggerExitEvent.RemoveListener(TriggerExitEvent);
        }
    }
}